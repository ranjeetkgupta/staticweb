Project identityCommon = parent.subprojects.find { it.name.equals('cloudfoundry-identity-common') }
Project identityScim = parent.subprojects.find { it.name.equals('cloudfoundry-identity-scim') }

description = 'CloudFoundry Identity Login'

dependencies {
  compile(identityCommon) {
    exclude(module: 'jna')
  }
  compile(identityScim) {
    exclude(module: 'jna')
  }

  compile group: 'org.springframework', name: 'spring-context-support', version:springVersion
  provided group: 'javax.servlet', name: 'javax.servlet-api', version:'3.0.1'

  testCompile identityCommon.configurations.testCompile.dependencies
  testCompile identityCommon.sourceSets.test.output

  compile group: 'org.springframework.security', name: 'spring-security-openid', version:springSecurityVersion
  compile group: 'org.thymeleaf', name: 'thymeleaf-spring4', version:'2.1.2.RELEASE'
  compile group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version:'1.2.3'
  compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity3', version:'2.1.1.RELEASE'
  compile group: 'javax.mail', name: 'mail', version:'1.4.7'

}

test.dependsOn identityCommon.instrumentedJar, identityScim.instrumentedJar

processResources {
    filter { line -> line.contains('${project.artifactId}') ? line.replace('${project.artifactId}','cloudfoundry-identity-login') : line }
}

project.gradle.taskGraph.whenReady { TaskExecutionGraph graph ->
  if (runningWithCoverage()) {
    test {
      classpath = files(test.classpath.collect(rewriteInstrumentedLibs))
    }
  }
}